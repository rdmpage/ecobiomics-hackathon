{
    "Description": "metaphactory 2.3.2 for Amazon Neptune",
    "Mappings": {
        "RegionMap": {
             "us-east-1": {
                 "AMI": "ami-ec2f7593"
             }
  ,
  "us-east-2": {
    "AMI": "ami-9d5169f8"
  }
  ,
  "us-west-2": {
    "AMI": "ami-1572386d"
  }
  ,
  "eu-west-1": {
    "AMI": "ami-50e3e8ba"
  }
        }
    },
    "Parameters": {
        "EC2SSHKeyPairName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the metaphactory instances.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair in same region."
        },
        "DbInstanceType": {
            "Description": "Neptune EC2 instance type",
            "Type": "String",
            "Default": "db.r4.2xlarge",
            "AllowedValues": [
                "db.r4.large",
                "db.r4.xlarge",
                "db.r4.2xlarge",
                "db.r4.4xlarge",
                "db.r4.8xlarge"
            ],
            "ConstraintDescription": "Must be a valid Neptune instance type."
        },
        "DBReplicaIdentifierSuffix": {
            "Description": "OPTIONAL: The ID for the Neptune Replica to use. Empty means no read replica.",
            "Type": "String",
            "Default": ""
        },
        "MetaphactoryEC2InstanceType": {
            "Description": "Metaphactory EC2 instance type",
            "Type": "String",
            "Default": "m5.xlarge",
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.18xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the metaphactory EC2 instance",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "MetaphactoryAccess": {
            "Description": "The IP address range that can be used to access hosted Metaphactory",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "NeptuneQueryTimeout": {
            "Type": "Number",
            "Default": 60000,
            "Description": "Neptune Query Time out (in milliseconds)"
        },
        "NeptuneEnableAuditLog": {
            "Type": "Number",
            "Default": 0,
            "AllowedValues": [
                0,
                1
            ],
            "Description": "Enable Audit Log. 0 means disable and 1 means enable."
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Neptune Configuration"
                    },
                    "Parameters": [
                        "DbInstanceType",
                        "NeptuneQueryTimeout",
                        "NeptuneEnableAuditLog",
                        "DBReplicaIdentifierSuffix"
                    ]
                },
                {
                    "Label": {
                        "default": "Metaphactory Configuration"
                    },
                    "Parameters": [
                        "MetaphactoryEC2InstanceType",
                        "MetaphactoryAccess",
                        "SSHLocation",
                        "EC2SSHKeyPairName"
                    ]
                }
            ],
            "ParameterLabels": {
                "DbInstanceType": {
                    "default": "Instance Type"
                },
                "NeptuneQueryTimeout": {
                    "default": "Query Timeout"
                },
                "NeptuneEnableAuditLog": {
                    "default": "Enable Audit Log"
                },
                "DBReplicaIdentifierSuffix": {
                    "default": "Replica Identifier Suffix"
                },
                "MetaphactoryEC2InstanceType": {
                    "default": "Instance Type"
                },
                "MetaphactoryAccess": {
                    "default": "CIDR for HTTP access"
                },
                "SSHLocation": {
                    "default": "CIDR for SSH access"
                }
            }
        }
    },
    "Conditions": {
        "CreateDBReplicaInstance": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "DBReplicaIdentifierSuffix"
                        },
                        ""
                    ]
                }
            ]
        }
    },
    "Resources": {
        "NeptuneDBSubnetGroup": {
            "Type": "AWS::Neptune::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "Neptune DB subnet group",
                "SubnetIds": [
                    {
                        "Ref": "Subnet1"
                    },
                    {
                        "Ref": "Subnet2"
                    },
                    {
                        "Ref": "Subnet3"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            }
        },
        "VPCS3Endpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "DependsOn": [
                "VPC"
            ],
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "PublicRouteTable"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".s3"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": [
                                "s3:*"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                }
            }
        },
        "NeptuneEC2ClientInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "default": [
                            "metaphactory-repository-setup"
                        ]
                    },
                    "metaphactory-repository-setup": {
                        "files": {
                            "/tmp/default.ttl": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "# metaphactory configuration template for the Amazon Neptune repository\n",
                                            "@prefix rep: <http://www.openrdf.org/config/repository#> .\n",
                                            "@prefix sparqlr: <http://www.openrdf.org/config/repository/sparql#> .\n",
                                            "@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n",
                                            "@prefix mph: <http://www.metaphacts.com/ontologies/platform/repository#> .\n",
                                            "[] a rep:Repository ;\n",
                                            "rep:repositoryID 'default' ; \n",
                                            "rdfs:label 'Amazon Neptune repository' ;\n",
                                            "rep:repositoryImpl [\n",
                                            "rep:repositoryType 'metaphactory:NeptuneSPARQLRepository' ;\n",
                                            "sparqlr:query-endpoint <http://",
                                            {
                                                "Fn::GetAtt": [
                                                    "NeptuneDBCluster",
                                                    "Endpoint"
                                                ]
                                            },
                                            ":",
                                            {
                                                "Fn::GetAtt": [
                                                    "NeptuneDBCluster",
                                                    "Port"
                                                ]
                                            },
                                            "/sparql> ;\n",
                                            "mph:neptuneDataLoaderUrl <http://",
                                            {
                                                "Fn::GetAtt": [
                                                    "NeptuneDBCluster",
                                                    "Endpoint"
                                                ]
                                            },
                                            ":",
                                            {
                                                "Fn::GetAtt": [
                                                    "NeptuneDBCluster",
                                                    "Port"
                                                ]
                                            },
                                            "/loader>;\n",
                                            "mph:quadMode 'true';\n",
                                            "]."
                                        ]
                                    ]
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "a_create": {
                                "command": "docker exec ec2-metaphactory mkdir -p /config/repositories"
                            },
                            "b_copy": {
                                "command": "docker cp /tmp/default.ttl ec2-metaphactory:/config/repositories/"
                            },
                            "c_restart": {
                                "command": "docker restart ec2-metaphactory"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "KeyName": {
                    "Ref": "EC2SSHKeyPairName"
                },
                "InstanceType": {
                    "Ref": "MetaphactoryEC2InstanceType"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "NeptuneEC2InstanceProfile"
                },
                "SubnetId": {
                    "Ref": "Subnet1"
                },
                "SecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "VPC",
                            "DefaultSecurityGroup"
                        ]
                    },
                    {
                        "Ref": "NeptuneSG"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/sh -xe\n",
                                "aws rds add-role-to-db-cluster ",
                                "--region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                " --db-cluster-identifier ",
                                {
                                    "Ref": "NeptuneDBCluster"
                                },
                                " --role-arn ",
                                {
                                    "Fn::GetAtt": [
                                        "NeptuneLoadFromS3Role",
                                        "Arn"
                                    ]
                                },
                                "\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource NeptuneEC2ClientInstance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "# Signal the status of cfn-init\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource NeptuneEC2ClientInstance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M"
                }
            },
            "DependsOn": [
                "NeptuneDBCluster",
                "NeptuneDBInstance"
            ]
        },
        "NeptuneSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "Allow Access",
                "SecurityGroupIngress": [
                    {
                        "FromPort": "22",
                        "ToPort": "22",
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        },
                        "Description": "ssh access"
                    },
                    {
                        "FromPort": "80",
                        "ToPort": "80",
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "MetaphactoryAccess"
                        },
                        "Description": "http access"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            }
        },
        "NeptuneEC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "NeptuneEC2ClientRole"
                    }
                ]
            },
            "DependsOn": [
                "NeptuneEC2ClientRole"
            ]
        },
        "NeptuneEC2ClientRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "NeptuneAccessPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "NeptuneAccessPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "rds:*",
                                "iam:GetAccountSummary",
                                "iam:ListAccountAliases",
                                "iam:PassRole"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "NeptuneEC2ClientRole"
                    }
                ]
            }
        },
        "NeptuneIAMAuthPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "NeptuneIAMAuthPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "neptune-db:*"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    ":",
                                    [
                                        "arn:aws:neptune-db",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "NeptuneDBCluster",
                                                "ClusterResourceId"
                                            ]
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "NeptuneEC2ClientRole"
                    }
                ]
            }
        },
        "NeptuneLoadFromS3Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "rds.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "NeptuneLoadFromS3Policy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "NeptuneLoadFromS3Policy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:Get*",
                                "s3:List*"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "NeptuneLoadFromS3Role"
                    }
                ]
            }
        },
        "NeptuneDBClusterParameterGroup": {
            "Type": "AWS::Neptune::DBClusterParameterGroup",
            "Properties": {
                "Family": "neptune1",
                "Description": "test-cfn-neptune-db-cluster-parameter-group-description",
                "Parameters": {
                    "neptune_enable_audit_log": {
                        "Ref": "NeptuneEnableAuditLog"
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            }
        },
        "NeptuneDBParameterGroup": {
            "Type": "AWS::Neptune::DBParameterGroup",
            "Properties": {
                "Family": "neptune1",
                "Description": "test-cfn-neptune-db-parameter-group-description",
                "Parameters": {
                    "neptune_query_timeout": {
                        "Ref": "NeptuneQueryTimeout"
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            }
        },
        "NeptuneDBCluster": {
            "Type": "AWS::Neptune::DBCluster",
            "Properties": {
                "DBSubnetGroupName": {
                    "Ref": "NeptuneDBSubnetGroup"
                },
                "VpcSecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "VPC",
                            "DefaultSecurityGroup"
                        ]
                    },
                    {
                        "Ref": "NeptuneSG"
                    }
                ],
                "DBClusterParameterGroupName": {
                    "Ref": "NeptuneDBClusterParameterGroup"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            },
            "DependsOn": [
                "NeptuneDBSubnetGroup",
                "NeptuneDBClusterParameterGroup"
            ]
        },
        "NeptuneDBInstance": {
            "Type": "AWS::Neptune::DBInstance",
            "Properties": {
                "DBClusterIdentifier": {
                    "Ref": "NeptuneDBCluster"
                },
                "DBInstanceClass": {
                    "Ref": "DbInstanceType"
                },
                "DBParameterGroupName": {
                    "Ref": "NeptuneDBParameterGroup"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            },
            "DependsOn": [
                "NeptuneDBCluster",
                "NeptuneDBParameterGroup"
            ]
        },
        "NeptuneDBReplicaInstance": {
            "Type": "AWS::Neptune::DBInstance",
            "Condition": "CreateDBReplicaInstance",
            "Properties": {
                "DBClusterIdentifier": {
                    "Ref": "NeptuneDBCluster"
                },
                "DBInstanceClass": {
                    "Ref": "DbInstanceType"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            },
            "DependsOn": [
                "NeptuneDBCluster",
                "NeptuneDBInstance"
            ]
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "192.168.8.0/24",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "DependsOn": [
                "VPC"
            ]
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "Neptune-Metaphactory"
                        }
                    },
                    {
                        "Key": "StackId",
                        "Value": {
                            "Fn::Sub": "${AWS::StackId}"
                        }
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
                        }
                    },
                    {
                        "Key": "Application",
                        "Value": "NeptuneCloudformation"
                    }
                ]
            }
        },
        "IGWAtt": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "IGW"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "DependsOn": [
                "VPC",
                "IGW"
            ]
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "DependsOn": [
                "IGWAtt"
            ]
        },
        "Subnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "192.168.8.0/26",
                "MapPublicIpOnLaunch": "true",
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "Subnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "192.168.8.64/26",
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "Subnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "192.168.8.128/26",
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "SubnetRTAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": [
                "Subnet1",
                "PublicRouteTable"
            ],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet1"
                }
            }
        },
        "SubnetRTAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": [
                "Subnet2",
                "PublicRouteTable"
            ],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet2"
                }
            }
        },
        "SubnetRTAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": [
                "Subnet3",
                "PublicRouteTable"
            ],
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet3"
                }
            }
        }
    },
    "Outputs": {
        "NeptuneLoadFromS3RoleArn": {
            "Description": "IAM Role for loading data in Neptune",
            "Value": {
                "Fn::GetAtt": [
                    "NeptuneLoadFromS3Role",
                    "Arn"
                ]
            }
        },
        "MetaphactoryPassword": {
            "Description": "Instance ID/default password for metaphactory admin user",
            "Value": {
                "Ref": "NeptuneEC2ClientInstance"
            }
        },
        "MetaphactoryURL": {
            "Description": "URL to the metaphactory based on the public domain name",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "NeptuneEC2ClientInstance",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        },
        "MetaphactorySSHAccess": {
            "Description": "This is how you gain remote access to the EC2 client.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "ssh ec2-user@",
                        {
                            "Fn::GetAtt": [
                                "NeptuneEC2ClientInstance",
                                "PublicIp"
                            ]
                        },
                        " -i ",
                        {
                            "Ref": "EC2SSHKeyPairName"
                        },
                        ".pem"
                    ]
                ]
            }
        }
    }
}
